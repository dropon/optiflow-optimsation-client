/*
Route Optimization

With the Route Optimization service you can schedule and optimize the routes of your fleet.

API version: 1.11
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package optiflow

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DailyRestRule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DailyRestRule{}

// DailyRestRule Defines when a daily rest becomes necessary and how long it should be. Currently, each driver must have the same values specified.  See [here](./concepts/drivers-working-hours-break-and-rest-rules) for more information.
type DailyRestRule struct {
	// The minimum duration of a daily rest [s]. Minimum is 3 hours, maximum is 22 hours.
	DailyRestTime int32 `json:"dailyRestTime"`
	// Maximum duration that the driver is allowed to drive [s] before taking a daily rest. The maximum driving time is considered as infinite if it is not set.
	MaximumDrivingTimeBetweenDailyRests NullableInt32 `json:"maximumDrivingTimeBetweenDailyRests,omitempty"`
	// Maximum duration that the driver is allowed to travel [s] before taking a daily. The maximum travel time is considered as infinite if it is not set.
	MaximumTravelTimeBetweenDailyRests NullableInt32 `json:"maximumTravelTimeBetweenDailyRests,omitempty"`
	DailyRestPosition *DailyRestPosition `json:"dailyRestPosition,omitempty"`
}

type _DailyRestRule DailyRestRule

// NewDailyRestRule instantiates a new DailyRestRule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDailyRestRule(dailyRestTime int32) *DailyRestRule {
	this := DailyRestRule{}
	this.DailyRestTime = dailyRestTime
	var dailyRestPosition DailyRestPosition = BETWEEN_TRIPS
	this.DailyRestPosition = &dailyRestPosition
	return &this
}

// NewDailyRestRuleWithDefaults instantiates a new DailyRestRule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDailyRestRuleWithDefaults() *DailyRestRule {
	this := DailyRestRule{}
	var dailyRestPosition DailyRestPosition = BETWEEN_TRIPS
	this.DailyRestPosition = &dailyRestPosition
	return &this
}

// GetDailyRestTime returns the DailyRestTime field value
func (o *DailyRestRule) GetDailyRestTime() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DailyRestTime
}

// GetDailyRestTimeOk returns a tuple with the DailyRestTime field value
// and a boolean to check if the value has been set.
func (o *DailyRestRule) GetDailyRestTimeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DailyRestTime, true
}

// SetDailyRestTime sets field value
func (o *DailyRestRule) SetDailyRestTime(v int32) {
	o.DailyRestTime = v
}

// GetMaximumDrivingTimeBetweenDailyRests returns the MaximumDrivingTimeBetweenDailyRests field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DailyRestRule) GetMaximumDrivingTimeBetweenDailyRests() int32 {
	if o == nil || IsNil(o.MaximumDrivingTimeBetweenDailyRests.Get()) {
		var ret int32
		return ret
	}
	return *o.MaximumDrivingTimeBetweenDailyRests.Get()
}

// GetMaximumDrivingTimeBetweenDailyRestsOk returns a tuple with the MaximumDrivingTimeBetweenDailyRests field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DailyRestRule) GetMaximumDrivingTimeBetweenDailyRestsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaximumDrivingTimeBetweenDailyRests.Get(), o.MaximumDrivingTimeBetweenDailyRests.IsSet()
}

// HasMaximumDrivingTimeBetweenDailyRests returns a boolean if a field has been set.
func (o *DailyRestRule) HasMaximumDrivingTimeBetweenDailyRests() bool {
	if o != nil && o.MaximumDrivingTimeBetweenDailyRests.IsSet() {
		return true
	}

	return false
}

// SetMaximumDrivingTimeBetweenDailyRests gets a reference to the given NullableInt32 and assigns it to the MaximumDrivingTimeBetweenDailyRests field.
func (o *DailyRestRule) SetMaximumDrivingTimeBetweenDailyRests(v int32) {
	o.MaximumDrivingTimeBetweenDailyRests.Set(&v)
}
// SetMaximumDrivingTimeBetweenDailyRestsNil sets the value for MaximumDrivingTimeBetweenDailyRests to be an explicit nil
func (o *DailyRestRule) SetMaximumDrivingTimeBetweenDailyRestsNil() {
	o.MaximumDrivingTimeBetweenDailyRests.Set(nil)
}

// UnsetMaximumDrivingTimeBetweenDailyRests ensures that no value is present for MaximumDrivingTimeBetweenDailyRests, not even an explicit nil
func (o *DailyRestRule) UnsetMaximumDrivingTimeBetweenDailyRests() {
	o.MaximumDrivingTimeBetweenDailyRests.Unset()
}

// GetMaximumTravelTimeBetweenDailyRests returns the MaximumTravelTimeBetweenDailyRests field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DailyRestRule) GetMaximumTravelTimeBetweenDailyRests() int32 {
	if o == nil || IsNil(o.MaximumTravelTimeBetweenDailyRests.Get()) {
		var ret int32
		return ret
	}
	return *o.MaximumTravelTimeBetweenDailyRests.Get()
}

// GetMaximumTravelTimeBetweenDailyRestsOk returns a tuple with the MaximumTravelTimeBetweenDailyRests field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DailyRestRule) GetMaximumTravelTimeBetweenDailyRestsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaximumTravelTimeBetweenDailyRests.Get(), o.MaximumTravelTimeBetweenDailyRests.IsSet()
}

// HasMaximumTravelTimeBetweenDailyRests returns a boolean if a field has been set.
func (o *DailyRestRule) HasMaximumTravelTimeBetweenDailyRests() bool {
	if o != nil && o.MaximumTravelTimeBetweenDailyRests.IsSet() {
		return true
	}

	return false
}

// SetMaximumTravelTimeBetweenDailyRests gets a reference to the given NullableInt32 and assigns it to the MaximumTravelTimeBetweenDailyRests field.
func (o *DailyRestRule) SetMaximumTravelTimeBetweenDailyRests(v int32) {
	o.MaximumTravelTimeBetweenDailyRests.Set(&v)
}
// SetMaximumTravelTimeBetweenDailyRestsNil sets the value for MaximumTravelTimeBetweenDailyRests to be an explicit nil
func (o *DailyRestRule) SetMaximumTravelTimeBetweenDailyRestsNil() {
	o.MaximumTravelTimeBetweenDailyRests.Set(nil)
}

// UnsetMaximumTravelTimeBetweenDailyRests ensures that no value is present for MaximumTravelTimeBetweenDailyRests, not even an explicit nil
func (o *DailyRestRule) UnsetMaximumTravelTimeBetweenDailyRests() {
	o.MaximumTravelTimeBetweenDailyRests.Unset()
}

// GetDailyRestPosition returns the DailyRestPosition field value if set, zero value otherwise.
func (o *DailyRestRule) GetDailyRestPosition() DailyRestPosition {
	if o == nil || IsNil(o.DailyRestPosition) {
		var ret DailyRestPosition
		return ret
	}
	return *o.DailyRestPosition
}

// GetDailyRestPositionOk returns a tuple with the DailyRestPosition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DailyRestRule) GetDailyRestPositionOk() (*DailyRestPosition, bool) {
	if o == nil || IsNil(o.DailyRestPosition) {
		return nil, false
	}
	return o.DailyRestPosition, true
}

// HasDailyRestPosition returns a boolean if a field has been set.
func (o *DailyRestRule) HasDailyRestPosition() bool {
	if o != nil && !IsNil(o.DailyRestPosition) {
		return true
	}

	return false
}

// SetDailyRestPosition gets a reference to the given DailyRestPosition and assigns it to the DailyRestPosition field.
func (o *DailyRestRule) SetDailyRestPosition(v DailyRestPosition) {
	o.DailyRestPosition = &v
}

func (o DailyRestRule) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DailyRestRule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["dailyRestTime"] = o.DailyRestTime
	if o.MaximumDrivingTimeBetweenDailyRests.IsSet() {
		toSerialize["maximumDrivingTimeBetweenDailyRests"] = o.MaximumDrivingTimeBetweenDailyRests.Get()
	}
	if o.MaximumTravelTimeBetweenDailyRests.IsSet() {
		toSerialize["maximumTravelTimeBetweenDailyRests"] = o.MaximumTravelTimeBetweenDailyRests.Get()
	}
	if !IsNil(o.DailyRestPosition) {
		toSerialize["dailyRestPosition"] = o.DailyRestPosition
	}
	return toSerialize, nil
}

func (o *DailyRestRule) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"dailyRestTime",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDailyRestRule := _DailyRestRule{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDailyRestRule)

	if err != nil {
		return err
	}

	*o = DailyRestRule(varDailyRestRule)

	return err
}

type NullableDailyRestRule struct {
	value *DailyRestRule
	isSet bool
}

func (v NullableDailyRestRule) Get() *DailyRestRule {
	return v.value
}

func (v *NullableDailyRestRule) Set(val *DailyRestRule) {
	v.value = val
	v.isSet = true
}

func (v NullableDailyRestRule) IsSet() bool {
	return v.isSet
}

func (v *NullableDailyRestRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDailyRestRule(val *DailyRestRule) *NullableDailyRestRule {
	return &NullableDailyRestRule{value: val, isSet: true}
}

func (v NullableDailyRestRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDailyRestRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


