/*
Route Optimization OptiFlow

With the Route Optimization OptiFlow service you can schedule and optimize the routes of your fleet.

API version: 1.24
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the OptimizationProgressSample type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OptimizationProgressSample{}

// OptimizationProgressSample A snapshot of optimization metrics at a specific point in time.
type OptimizationProgressSample struct {
	// The time at which the metrics were captured. Formatted according to [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).
	Time *time.Time `json:"time,omitempty"`
	Metrics *Metrics `json:"metrics,omitempty"`
}

// NewOptimizationProgressSample instantiates a new OptimizationProgressSample object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOptimizationProgressSample() *OptimizationProgressSample {
	this := OptimizationProgressSample{}
	return &this
}

// NewOptimizationProgressSampleWithDefaults instantiates a new OptimizationProgressSample object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOptimizationProgressSampleWithDefaults() *OptimizationProgressSample {
	this := OptimizationProgressSample{}
	return &this
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *OptimizationProgressSample) GetTime() time.Time {
	if o == nil || IsNil(o.Time) {
		var ret time.Time
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptimizationProgressSample) GetTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Time) {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *OptimizationProgressSample) HasTime() bool {
	if o != nil && !IsNil(o.Time) {
		return true
	}

	return false
}

// SetTime gets a reference to the given time.Time and assigns it to the Time field.
func (o *OptimizationProgressSample) SetTime(v time.Time) {
	o.Time = &v
}

// GetMetrics returns the Metrics field value if set, zero value otherwise.
func (o *OptimizationProgressSample) GetMetrics() Metrics {
	if o == nil || IsNil(o.Metrics) {
		var ret Metrics
		return ret
	}
	return *o.Metrics
}

// GetMetricsOk returns a tuple with the Metrics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptimizationProgressSample) GetMetricsOk() (*Metrics, bool) {
	if o == nil || IsNil(o.Metrics) {
		return nil, false
	}
	return o.Metrics, true
}

// HasMetrics returns a boolean if a field has been set.
func (o *OptimizationProgressSample) HasMetrics() bool {
	if o != nil && !IsNil(o.Metrics) {
		return true
	}

	return false
}

// SetMetrics gets a reference to the given Metrics and assigns it to the Metrics field.
func (o *OptimizationProgressSample) SetMetrics(v Metrics) {
	o.Metrics = &v
}

func (o OptimizationProgressSample) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OptimizationProgressSample) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Time) {
		toSerialize["time"] = o.Time
	}
	if !IsNil(o.Metrics) {
		toSerialize["metrics"] = o.Metrics
	}
	return toSerialize, nil
}

type NullableOptimizationProgressSample struct {
	value *OptimizationProgressSample
	isSet bool
}

func (v NullableOptimizationProgressSample) Get() *OptimizationProgressSample {
	return v.value
}

func (v *NullableOptimizationProgressSample) Set(val *OptimizationProgressSample) {
	v.value = val
	v.isSet = true
}

func (v NullableOptimizationProgressSample) IsSet() bool {
	return v.isSet
}

func (v *NullableOptimizationProgressSample) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOptimizationProgressSample(val *OptimizationProgressSample) *NullableOptimizationProgressSample {
	return &NullableOptimizationProgressSample{value: val, isSet: true}
}

func (v NullableOptimizationProgressSample) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOptimizationProgressSample) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


