/*
Route Optimization OptiFlow

With the Route Optimization OptiFlow service you can schedule and optimize the routes of your fleet.

API version: 1.27
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ResourceConstraints type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResourceConstraints{}

// ResourceConstraints Defines constraints on the vehicles and routes assigned to the resource.
type ResourceConstraints struct {
	// Restricts the number of vehicles the resource can be assigned to.
	MaximumVehicles *int32 `json:"maximumVehicles,omitempty"`
	// Restricts the summed duration [s] of routes corresponding to vehicles assigned to the resource.
	MaximumTotalRouteDuration *int32 `json:"maximumTotalRouteDuration,omitempty"`
}

// NewResourceConstraints instantiates a new ResourceConstraints object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceConstraints() *ResourceConstraints {
	this := ResourceConstraints{}
	return &this
}

// NewResourceConstraintsWithDefaults instantiates a new ResourceConstraints object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceConstraintsWithDefaults() *ResourceConstraints {
	this := ResourceConstraints{}
	return &this
}

// GetMaximumVehicles returns the MaximumVehicles field value if set, zero value otherwise.
func (o *ResourceConstraints) GetMaximumVehicles() int32 {
	if o == nil || IsNil(o.MaximumVehicles) {
		var ret int32
		return ret
	}
	return *o.MaximumVehicles
}

// GetMaximumVehiclesOk returns a tuple with the MaximumVehicles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceConstraints) GetMaximumVehiclesOk() (*int32, bool) {
	if o == nil || IsNil(o.MaximumVehicles) {
		return nil, false
	}
	return o.MaximumVehicles, true
}

// HasMaximumVehicles returns a boolean if a field has been set.
func (o *ResourceConstraints) HasMaximumVehicles() bool {
	if o != nil && !IsNil(o.MaximumVehicles) {
		return true
	}

	return false
}

// SetMaximumVehicles gets a reference to the given int32 and assigns it to the MaximumVehicles field.
func (o *ResourceConstraints) SetMaximumVehicles(v int32) {
	o.MaximumVehicles = &v
}

// GetMaximumTotalRouteDuration returns the MaximumTotalRouteDuration field value if set, zero value otherwise.
func (o *ResourceConstraints) GetMaximumTotalRouteDuration() int32 {
	if o == nil || IsNil(o.MaximumTotalRouteDuration) {
		var ret int32
		return ret
	}
	return *o.MaximumTotalRouteDuration
}

// GetMaximumTotalRouteDurationOk returns a tuple with the MaximumTotalRouteDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceConstraints) GetMaximumTotalRouteDurationOk() (*int32, bool) {
	if o == nil || IsNil(o.MaximumTotalRouteDuration) {
		return nil, false
	}
	return o.MaximumTotalRouteDuration, true
}

// HasMaximumTotalRouteDuration returns a boolean if a field has been set.
func (o *ResourceConstraints) HasMaximumTotalRouteDuration() bool {
	if o != nil && !IsNil(o.MaximumTotalRouteDuration) {
		return true
	}

	return false
}

// SetMaximumTotalRouteDuration gets a reference to the given int32 and assigns it to the MaximumTotalRouteDuration field.
func (o *ResourceConstraints) SetMaximumTotalRouteDuration(v int32) {
	o.MaximumTotalRouteDuration = &v
}

func (o ResourceConstraints) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResourceConstraints) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MaximumVehicles) {
		toSerialize["maximumVehicles"] = o.MaximumVehicles
	}
	if !IsNil(o.MaximumTotalRouteDuration) {
		toSerialize["maximumTotalRouteDuration"] = o.MaximumTotalRouteDuration
	}
	return toSerialize, nil
}

type NullableResourceConstraints struct {
	value *ResourceConstraints
	isSet bool
}

func (v NullableResourceConstraints) Get() *ResourceConstraints {
	return v.value
}

func (v *NullableResourceConstraints) Set(val *ResourceConstraints) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceConstraints) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceConstraints) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceConstraints(val *ResourceConstraints) *NullableResourceConstraints {
	return &NullableResourceConstraints{value: val, isSet: true}
}

func (v NullableResourceConstraints) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceConstraints) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


