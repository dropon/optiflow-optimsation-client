/*
Route Optimization OptiFlow

With the Route Optimization OptiFlow service you can schedule and optimize the routes of your fleet.

API version: 1.30
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the ChargingStructure type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChargingStructure{}

// ChargingStructure Scheduled charging on a route.
type ChargingStructure struct {
	// The point in time when charging starts. Formatted according to [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6). The date must not be before `1970-01-01T00:00:00+00:00` nor after `2037-12-31T23:59:59+00:00`. The date must provide an offset to UTC.
	Start time.Time `json:"start"`
	// Charging duration [s].
	Duration int32 `json:"duration"`
	// The unique identifier of the location where charging is taking place.
	LocationId string `json:"locationId" validate:"regexp=^[a-zA-Z0-9_-]{1,36}$"`
	// The unique identifier of the charging station where charging is taking place.
	ChargingStationId string `json:"chargingStationId" validate:"regexp=^[a-zA-Z0-9_-]{1,36}$"`
}

type _ChargingStructure ChargingStructure

// NewChargingStructure instantiates a new ChargingStructure object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChargingStructure(start time.Time, duration int32, locationId string, chargingStationId string) *ChargingStructure {
	this := ChargingStructure{}
	this.Start = start
	this.Duration = duration
	this.LocationId = locationId
	this.ChargingStationId = chargingStationId
	return &this
}

// NewChargingStructureWithDefaults instantiates a new ChargingStructure object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChargingStructureWithDefaults() *ChargingStructure {
	this := ChargingStructure{}
	return &this
}

// GetStart returns the Start field value
func (o *ChargingStructure) GetStart() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Start
}

// GetStartOk returns a tuple with the Start field value
// and a boolean to check if the value has been set.
func (o *ChargingStructure) GetStartOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Start, true
}

// SetStart sets field value
func (o *ChargingStructure) SetStart(v time.Time) {
	o.Start = v
}

// GetDuration returns the Duration field value
func (o *ChargingStructure) GetDuration() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Duration
}

// GetDurationOk returns a tuple with the Duration field value
// and a boolean to check if the value has been set.
func (o *ChargingStructure) GetDurationOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Duration, true
}

// SetDuration sets field value
func (o *ChargingStructure) SetDuration(v int32) {
	o.Duration = v
}

// GetLocationId returns the LocationId field value
func (o *ChargingStructure) GetLocationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LocationId
}

// GetLocationIdOk returns a tuple with the LocationId field value
// and a boolean to check if the value has been set.
func (o *ChargingStructure) GetLocationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LocationId, true
}

// SetLocationId sets field value
func (o *ChargingStructure) SetLocationId(v string) {
	o.LocationId = v
}

// GetChargingStationId returns the ChargingStationId field value
func (o *ChargingStructure) GetChargingStationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChargingStationId
}

// GetChargingStationIdOk returns a tuple with the ChargingStationId field value
// and a boolean to check if the value has been set.
func (o *ChargingStructure) GetChargingStationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChargingStationId, true
}

// SetChargingStationId sets field value
func (o *ChargingStructure) SetChargingStationId(v string) {
	o.ChargingStationId = v
}

func (o ChargingStructure) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChargingStructure) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["start"] = o.Start
	toSerialize["duration"] = o.Duration
	toSerialize["locationId"] = o.LocationId
	toSerialize["chargingStationId"] = o.ChargingStationId
	return toSerialize, nil
}

func (o *ChargingStructure) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"start",
		"duration",
		"locationId",
		"chargingStationId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varChargingStructure := _ChargingStructure{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varChargingStructure)

	if err != nil {
		return err
	}

	*o = ChargingStructure(varChargingStructure)

	return err
}

type NullableChargingStructure struct {
	value *ChargingStructure
	isSet bool
}

func (v NullableChargingStructure) Get() *ChargingStructure {
	return v.value
}

func (v *NullableChargingStructure) Set(val *ChargingStructure) {
	v.value = val
	v.isSet = true
}

func (v NullableChargingStructure) IsSet() bool {
	return v.isSet
}

func (v *NullableChargingStructure) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChargingStructure(val *ChargingStructure) *NullableChargingStructure {
	return &NullableChargingStructure{value: val, isSet: true}
}

func (v NullableChargingStructure) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChargingStructure) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


