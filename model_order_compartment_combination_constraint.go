/*
Route Optimization OptiFlow

With the Route Optimization OptiFlow service you can schedule and optimize the routes of your fleet.

API version: 1.10
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OrderCompartmentCombinationConstraint type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderCompartmentCombinationConstraint{}

// OrderCompartmentCombinationConstraint A constraint on the combination of orders and compartments belonging to a certain category.
type OrderCompartmentCombinationConstraint struct {
	Type OrderCompartmentCombinationConstraintType `json:"type"`
	// The category of orders to which the constraint applies. The constraint will be ignored when no order belongs to this category.
	OrderCategory string `json:"orderCategory" validate:"regexp=^[a-zA-Z0-9_-]{1,36}$"`
	// The category of compartments to which the constraint applies. The constraint will be ignored when no compartment belongs to this category.
	CompartmentCategory string `json:"compartmentCategory" validate:"regexp=^[a-zA-Z0-9_-]{1,36}$"`
}

type _OrderCompartmentCombinationConstraint OrderCompartmentCombinationConstraint

// NewOrderCompartmentCombinationConstraint instantiates a new OrderCompartmentCombinationConstraint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderCompartmentCombinationConstraint(type_ OrderCompartmentCombinationConstraintType, orderCategory string, compartmentCategory string) *OrderCompartmentCombinationConstraint {
	this := OrderCompartmentCombinationConstraint{}
	this.Type = type_
	this.OrderCategory = orderCategory
	this.CompartmentCategory = compartmentCategory
	return &this
}

// NewOrderCompartmentCombinationConstraintWithDefaults instantiates a new OrderCompartmentCombinationConstraint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderCompartmentCombinationConstraintWithDefaults() *OrderCompartmentCombinationConstraint {
	this := OrderCompartmentCombinationConstraint{}
	return &this
}

// GetType returns the Type field value
func (o *OrderCompartmentCombinationConstraint) GetType() OrderCompartmentCombinationConstraintType {
	if o == nil {
		var ret OrderCompartmentCombinationConstraintType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *OrderCompartmentCombinationConstraint) GetTypeOk() (*OrderCompartmentCombinationConstraintType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *OrderCompartmentCombinationConstraint) SetType(v OrderCompartmentCombinationConstraintType) {
	o.Type = v
}

// GetOrderCategory returns the OrderCategory field value
func (o *OrderCompartmentCombinationConstraint) GetOrderCategory() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrderCategory
}

// GetOrderCategoryOk returns a tuple with the OrderCategory field value
// and a boolean to check if the value has been set.
func (o *OrderCompartmentCombinationConstraint) GetOrderCategoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrderCategory, true
}

// SetOrderCategory sets field value
func (o *OrderCompartmentCombinationConstraint) SetOrderCategory(v string) {
	o.OrderCategory = v
}

// GetCompartmentCategory returns the CompartmentCategory field value
func (o *OrderCompartmentCombinationConstraint) GetCompartmentCategory() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CompartmentCategory
}

// GetCompartmentCategoryOk returns a tuple with the CompartmentCategory field value
// and a boolean to check if the value has been set.
func (o *OrderCompartmentCombinationConstraint) GetCompartmentCategoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CompartmentCategory, true
}

// SetCompartmentCategory sets field value
func (o *OrderCompartmentCombinationConstraint) SetCompartmentCategory(v string) {
	o.CompartmentCategory = v
}

func (o OrderCompartmentCombinationConstraint) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderCompartmentCombinationConstraint) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["orderCategory"] = o.OrderCategory
	toSerialize["compartmentCategory"] = o.CompartmentCategory
	return toSerialize, nil
}

func (o *OrderCompartmentCombinationConstraint) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"orderCategory",
		"compartmentCategory",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOrderCompartmentCombinationConstraint := _OrderCompartmentCombinationConstraint{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOrderCompartmentCombinationConstraint)

	if err != nil {
		return err
	}

	*o = OrderCompartmentCombinationConstraint(varOrderCompartmentCombinationConstraint)

	return err
}

type NullableOrderCompartmentCombinationConstraint struct {
	value *OrderCompartmentCombinationConstraint
	isSet bool
}

func (v NullableOrderCompartmentCombinationConstraint) Get() *OrderCompartmentCombinationConstraint {
	return v.value
}

func (v *NullableOrderCompartmentCombinationConstraint) Set(val *OrderCompartmentCombinationConstraint) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderCompartmentCombinationConstraint) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderCompartmentCombinationConstraint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderCompartmentCombinationConstraint(val *OrderCompartmentCombinationConstraint) *NullableOrderCompartmentCombinationConstraint {
	return &NullableOrderCompartmentCombinationConstraint{value: val, isSet: true}
}

func (v NullableOrderCompartmentCombinationConstraint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderCompartmentCombinationConstraint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


