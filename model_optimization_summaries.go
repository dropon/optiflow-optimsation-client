/*
Route Optimization OptiFlow

With the Route Optimization OptiFlow service you can schedule and optimize the routes of your fleet.

API version: 1.26
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OptimizationSummaries type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OptimizationSummaries{}

// OptimizationSummaries A paginated list of optimization summaries returned by the *listOptimization* operation.
type OptimizationSummaries struct {
	// A list of optimization summaries.
	Optimizations []OptimizationSummary `json:"optimizations,omitempty"`
	// Pagination cursor for the next page of results. Present when additional results exist beyond the current page. Pass this value as the `cursor` parameter in the next request to continue pagination. Null indicates the final page.
	NextCursor *string `json:"nextCursor,omitempty"`
}

// NewOptimizationSummaries instantiates a new OptimizationSummaries object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOptimizationSummaries() *OptimizationSummaries {
	this := OptimizationSummaries{}
	return &this
}

// NewOptimizationSummariesWithDefaults instantiates a new OptimizationSummaries object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOptimizationSummariesWithDefaults() *OptimizationSummaries {
	this := OptimizationSummaries{}
	return &this
}

// GetOptimizations returns the Optimizations field value if set, zero value otherwise.
func (o *OptimizationSummaries) GetOptimizations() []OptimizationSummary {
	if o == nil || IsNil(o.Optimizations) {
		var ret []OptimizationSummary
		return ret
	}
	return o.Optimizations
}

// GetOptimizationsOk returns a tuple with the Optimizations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptimizationSummaries) GetOptimizationsOk() ([]OptimizationSummary, bool) {
	if o == nil || IsNil(o.Optimizations) {
		return nil, false
	}
	return o.Optimizations, true
}

// HasOptimizations returns a boolean if a field has been set.
func (o *OptimizationSummaries) HasOptimizations() bool {
	if o != nil && !IsNil(o.Optimizations) {
		return true
	}

	return false
}

// SetOptimizations gets a reference to the given []OptimizationSummary and assigns it to the Optimizations field.
func (o *OptimizationSummaries) SetOptimizations(v []OptimizationSummary) {
	o.Optimizations = v
}

// GetNextCursor returns the NextCursor field value if set, zero value otherwise.
func (o *OptimizationSummaries) GetNextCursor() string {
	if o == nil || IsNil(o.NextCursor) {
		var ret string
		return ret
	}
	return *o.NextCursor
}

// GetNextCursorOk returns a tuple with the NextCursor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptimizationSummaries) GetNextCursorOk() (*string, bool) {
	if o == nil || IsNil(o.NextCursor) {
		return nil, false
	}
	return o.NextCursor, true
}

// HasNextCursor returns a boolean if a field has been set.
func (o *OptimizationSummaries) HasNextCursor() bool {
	if o != nil && !IsNil(o.NextCursor) {
		return true
	}

	return false
}

// SetNextCursor gets a reference to the given string and assigns it to the NextCursor field.
func (o *OptimizationSummaries) SetNextCursor(v string) {
	o.NextCursor = &v
}

func (o OptimizationSummaries) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OptimizationSummaries) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Optimizations) {
		toSerialize["optimizations"] = o.Optimizations
	}
	if !IsNil(o.NextCursor) {
		toSerialize["nextCursor"] = o.NextCursor
	}
	return toSerialize, nil
}

type NullableOptimizationSummaries struct {
	value *OptimizationSummaries
	isSet bool
}

func (v NullableOptimizationSummaries) Get() *OptimizationSummaries {
	return v.value
}

func (v *NullableOptimizationSummaries) Set(val *OptimizationSummaries) {
	v.value = val
	v.isSet = true
}

func (v NullableOptimizationSummaries) IsSet() bool {
	return v.isSet
}

func (v *NullableOptimizationSummaries) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOptimizationSummaries(val *OptimizationSummaries) *NullableOptimizationSummaries {
	return &NullableOptimizationSummaries{value: val, isSet: true}
}

func (v NullableOptimizationSummaries) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOptimizationSummaries) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


