/*
Route Optimization OptiFlow

With the Route Optimization OptiFlow service you can schedule and optimize the routes of your fleet.

API version: 1.22
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OptimizationSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OptimizationSummary{}

// OptimizationSummary A summary representation of an optimization.
type OptimizationSummary struct {
	// The unique identifier of the optimization.
	Id *string `json:"id,omitempty"`
	Status *OptimizationStatus `json:"status,omitempty"`
	Metrics *Metrics `json:"metrics,omitempty"`
	Metadata *OptimizationResultMetadata `json:"metadata,omitempty"`
}

// NewOptimizationSummary instantiates a new OptimizationSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOptimizationSummary() *OptimizationSummary {
	this := OptimizationSummary{}
	return &this
}

// NewOptimizationSummaryWithDefaults instantiates a new OptimizationSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOptimizationSummaryWithDefaults() *OptimizationSummary {
	this := OptimizationSummary{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OptimizationSummary) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptimizationSummary) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OptimizationSummary) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *OptimizationSummary) SetId(v string) {
	o.Id = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *OptimizationSummary) GetStatus() OptimizationStatus {
	if o == nil || IsNil(o.Status) {
		var ret OptimizationStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptimizationSummary) GetStatusOk() (*OptimizationStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *OptimizationSummary) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given OptimizationStatus and assigns it to the Status field.
func (o *OptimizationSummary) SetStatus(v OptimizationStatus) {
	o.Status = &v
}

// GetMetrics returns the Metrics field value if set, zero value otherwise.
func (o *OptimizationSummary) GetMetrics() Metrics {
	if o == nil || IsNil(o.Metrics) {
		var ret Metrics
		return ret
	}
	return *o.Metrics
}

// GetMetricsOk returns a tuple with the Metrics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptimizationSummary) GetMetricsOk() (*Metrics, bool) {
	if o == nil || IsNil(o.Metrics) {
		return nil, false
	}
	return o.Metrics, true
}

// HasMetrics returns a boolean if a field has been set.
func (o *OptimizationSummary) HasMetrics() bool {
	if o != nil && !IsNil(o.Metrics) {
		return true
	}

	return false
}

// SetMetrics gets a reference to the given Metrics and assigns it to the Metrics field.
func (o *OptimizationSummary) SetMetrics(v Metrics) {
	o.Metrics = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *OptimizationSummary) GetMetadata() OptimizationResultMetadata {
	if o == nil || IsNil(o.Metadata) {
		var ret OptimizationResultMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptimizationSummary) GetMetadataOk() (*OptimizationResultMetadata, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *OptimizationSummary) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given OptimizationResultMetadata and assigns it to the Metadata field.
func (o *OptimizationSummary) SetMetadata(v OptimizationResultMetadata) {
	o.Metadata = &v
}

func (o OptimizationSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OptimizationSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Metrics) {
		toSerialize["metrics"] = o.Metrics
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	return toSerialize, nil
}

type NullableOptimizationSummary struct {
	value *OptimizationSummary
	isSet bool
}

func (v NullableOptimizationSummary) Get() *OptimizationSummary {
	return v.value
}

func (v *NullableOptimizationSummary) Set(val *OptimizationSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableOptimizationSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableOptimizationSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOptimizationSummary(val *OptimizationSummary) *NullableOptimizationSummary {
	return &NullableOptimizationSummary{value: val, isSet: true}
}

func (v NullableOptimizationSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOptimizationSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


