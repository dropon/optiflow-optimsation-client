/*
Route Optimization OptiFlow

With the Route Optimization OptiFlow service you can schedule and optimize the routes of your fleet.

API version: 1.30
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the VehicleSlot type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VehicleSlot{}

// VehicleSlot Describes a vehicle slot that can be assigned stops.
type VehicleSlot struct {
	// The cost incurred when assigning at least one stop to this vehicle slot.
	Cost *float64 `json:"cost,omitempty"`
}

// NewVehicleSlot instantiates a new VehicleSlot object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVehicleSlot() *VehicleSlot {
	this := VehicleSlot{}
	var cost float64 = 0
	this.Cost = &cost
	return &this
}

// NewVehicleSlotWithDefaults instantiates a new VehicleSlot object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVehicleSlotWithDefaults() *VehicleSlot {
	this := VehicleSlot{}
	var cost float64 = 0
	this.Cost = &cost
	return &this
}

// GetCost returns the Cost field value if set, zero value otherwise.
func (o *VehicleSlot) GetCost() float64 {
	if o == nil || IsNil(o.Cost) {
		var ret float64
		return ret
	}
	return *o.Cost
}

// GetCostOk returns a tuple with the Cost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VehicleSlot) GetCostOk() (*float64, bool) {
	if o == nil || IsNil(o.Cost) {
		return nil, false
	}
	return o.Cost, true
}

// HasCost returns a boolean if a field has been set.
func (o *VehicleSlot) HasCost() bool {
	if o != nil && !IsNil(o.Cost) {
		return true
	}

	return false
}

// SetCost gets a reference to the given float64 and assigns it to the Cost field.
func (o *VehicleSlot) SetCost(v float64) {
	o.Cost = &v
}

func (o VehicleSlot) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VehicleSlot) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cost) {
		toSerialize["cost"] = o.Cost
	}
	return toSerialize, nil
}

type NullableVehicleSlot struct {
	value *VehicleSlot
	isSet bool
}

func (v NullableVehicleSlot) Get() *VehicleSlot {
	return v.value
}

func (v *NullableVehicleSlot) Set(val *VehicleSlot) {
	v.value = val
	v.isSet = true
}

func (v NullableVehicleSlot) IsSet() bool {
	return v.isSet
}

func (v *NullableVehicleSlot) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVehicleSlot(val *VehicleSlot) *NullableVehicleSlot {
	return &NullableVehicleSlot{value: val, isSet: true}
}

func (v NullableVehicleSlot) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVehicleSlot) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


