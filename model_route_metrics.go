/*
Route Optimization OptiFlow

With the Route Optimization OptiFlow service you can schedule and optimize the routes of your fleet.

API version: 1.29
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RouteMetrics type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RouteMetrics{}

// RouteMetrics Metrics providing insights into the route.
type RouteMetrics struct {
	// The number of stops in the route.A stop is a visit at a location where one or more tasks are executed.
	NumberOfStops *int32 `json:"numberOfStops,omitempty"`
	// The cost of the route. This includes the cost per hour, cost per kilometer and fixed cost of the vehicle.
	Cost *float64 `json:"cost,omitempty"`
	// The distance [m] travelled on the route.
	Distance *int32 `json:"distance,omitempty"`
	// The duration [s] of the route from start to end.
	Duration *int32 `json:"duration,omitempty"`
}

// NewRouteMetrics instantiates a new RouteMetrics object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRouteMetrics() *RouteMetrics {
	this := RouteMetrics{}
	return &this
}

// NewRouteMetricsWithDefaults instantiates a new RouteMetrics object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRouteMetricsWithDefaults() *RouteMetrics {
	this := RouteMetrics{}
	return &this
}

// GetNumberOfStops returns the NumberOfStops field value if set, zero value otherwise.
func (o *RouteMetrics) GetNumberOfStops() int32 {
	if o == nil || IsNil(o.NumberOfStops) {
		var ret int32
		return ret
	}
	return *o.NumberOfStops
}

// GetNumberOfStopsOk returns a tuple with the NumberOfStops field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteMetrics) GetNumberOfStopsOk() (*int32, bool) {
	if o == nil || IsNil(o.NumberOfStops) {
		return nil, false
	}
	return o.NumberOfStops, true
}

// HasNumberOfStops returns a boolean if a field has been set.
func (o *RouteMetrics) HasNumberOfStops() bool {
	if o != nil && !IsNil(o.NumberOfStops) {
		return true
	}

	return false
}

// SetNumberOfStops gets a reference to the given int32 and assigns it to the NumberOfStops field.
func (o *RouteMetrics) SetNumberOfStops(v int32) {
	o.NumberOfStops = &v
}

// GetCost returns the Cost field value if set, zero value otherwise.
func (o *RouteMetrics) GetCost() float64 {
	if o == nil || IsNil(o.Cost) {
		var ret float64
		return ret
	}
	return *o.Cost
}

// GetCostOk returns a tuple with the Cost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteMetrics) GetCostOk() (*float64, bool) {
	if o == nil || IsNil(o.Cost) {
		return nil, false
	}
	return o.Cost, true
}

// HasCost returns a boolean if a field has been set.
func (o *RouteMetrics) HasCost() bool {
	if o != nil && !IsNil(o.Cost) {
		return true
	}

	return false
}

// SetCost gets a reference to the given float64 and assigns it to the Cost field.
func (o *RouteMetrics) SetCost(v float64) {
	o.Cost = &v
}

// GetDistance returns the Distance field value if set, zero value otherwise.
func (o *RouteMetrics) GetDistance() int32 {
	if o == nil || IsNil(o.Distance) {
		var ret int32
		return ret
	}
	return *o.Distance
}

// GetDistanceOk returns a tuple with the Distance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteMetrics) GetDistanceOk() (*int32, bool) {
	if o == nil || IsNil(o.Distance) {
		return nil, false
	}
	return o.Distance, true
}

// HasDistance returns a boolean if a field has been set.
func (o *RouteMetrics) HasDistance() bool {
	if o != nil && !IsNil(o.Distance) {
		return true
	}

	return false
}

// SetDistance gets a reference to the given int32 and assigns it to the Distance field.
func (o *RouteMetrics) SetDistance(v int32) {
	o.Distance = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *RouteMetrics) GetDuration() int32 {
	if o == nil || IsNil(o.Duration) {
		var ret int32
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RouteMetrics) GetDurationOk() (*int32, bool) {
	if o == nil || IsNil(o.Duration) {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *RouteMetrics) HasDuration() bool {
	if o != nil && !IsNil(o.Duration) {
		return true
	}

	return false
}

// SetDuration gets a reference to the given int32 and assigns it to the Duration field.
func (o *RouteMetrics) SetDuration(v int32) {
	o.Duration = &v
}

func (o RouteMetrics) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RouteMetrics) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NumberOfStops) {
		toSerialize["numberOfStops"] = o.NumberOfStops
	}
	if !IsNil(o.Cost) {
		toSerialize["cost"] = o.Cost
	}
	if !IsNil(o.Distance) {
		toSerialize["distance"] = o.Distance
	}
	if !IsNil(o.Duration) {
		toSerialize["duration"] = o.Duration
	}
	return toSerialize, nil
}

type NullableRouteMetrics struct {
	value *RouteMetrics
	isSet bool
}

func (v NullableRouteMetrics) Get() *RouteMetrics {
	return v.value
}

func (v *NullableRouteMetrics) Set(val *RouteMetrics) {
	v.value = val
	v.isSet = true
}

func (v NullableRouteMetrics) IsSet() bool {
	return v.isSet
}

func (v *NullableRouteMetrics) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRouteMetrics(val *RouteMetrics) *NullableRouteMetrics {
	return &NullableRouteMetrics{value: val, isSet: true}
}

func (v NullableRouteMetrics) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRouteMetrics) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


