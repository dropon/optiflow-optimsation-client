/*
Route Optimization OptiFlow

With the Route Optimization OptiFlow service you can schedule and optimize the routes of your fleet.

API version: 1.15
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the OptimizationResultMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OptimizationResultMetadata{}

// OptimizationResultMetadata The result metadata which contains the user-defined request metadata.
type OptimizationResultMetadata struct {
	// The name of the optimization.
	Name *string `json:"name,omitempty"`
	// A list of tags of the optimization.
	Tags []string `json:"tags,omitempty"`
	// The creation time of the optimization. Formatted according to [RFC 3339, section 5.6](https://tools.ietf.org/html/rfc3339#section-5.6).
	Created *time.Time `json:"created,omitempty"`
}

// NewOptimizationResultMetadata instantiates a new OptimizationResultMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOptimizationResultMetadata() *OptimizationResultMetadata {
	this := OptimizationResultMetadata{}
	return &this
}

// NewOptimizationResultMetadataWithDefaults instantiates a new OptimizationResultMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOptimizationResultMetadataWithDefaults() *OptimizationResultMetadata {
	this := OptimizationResultMetadata{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OptimizationResultMetadata) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptimizationResultMetadata) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OptimizationResultMetadata) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OptimizationResultMetadata) SetName(v string) {
	o.Name = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *OptimizationResultMetadata) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptimizationResultMetadata) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *OptimizationResultMetadata) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *OptimizationResultMetadata) SetTags(v []string) {
	o.Tags = v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *OptimizationResultMetadata) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptimizationResultMetadata) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *OptimizationResultMetadata) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *OptimizationResultMetadata) SetCreated(v time.Time) {
	o.Created = &v
}

func (o OptimizationResultMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OptimizationResultMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	return toSerialize, nil
}

type NullableOptimizationResultMetadata struct {
	value *OptimizationResultMetadata
	isSet bool
}

func (v NullableOptimizationResultMetadata) Get() *OptimizationResultMetadata {
	return v.value
}

func (v *NullableOptimizationResultMetadata) Set(val *OptimizationResultMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableOptimizationResultMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableOptimizationResultMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOptimizationResultMetadata(val *OptimizationResultMetadata) *NullableOptimizationResultMetadata {
	return &NullableOptimizationResultMetadata{value: val, isSet: true}
}

func (v NullableOptimizationResultMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOptimizationResultMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


