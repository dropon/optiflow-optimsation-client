/*
Route Optimization OptiFlow

With the Route Optimization OptiFlow service you can schedule and optimize the routes of your fleet.

API version: 1.25
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ForbiddenTaskSequence type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ForbiddenTaskSequence{}

// ForbiddenTaskSequence Constrains tasks belonging a certain category to be executed before tasks belonging to another category on the route.
type ForbiddenTaskSequence struct {
	// The category of tasks that cannot be scheduled on the route before a task with the second task category. The constraint will be ignored when no task belongs to this category.
	FirstTaskCategory string `json:"firstTaskCategory" validate:"regexp=^[a-zA-Z0-9_-]{1,36}$"`
	Type ForbiddenTaskSequenceType `json:"type"`
	// The category of the tasks that must not be preceded in the route by tasks belonging to the first task category. The constraint will be ignored when no task belongs to this category.
	SecondTaskCategory string `json:"secondTaskCategory" validate:"regexp=^[a-zA-Z0-9_-]{1,36}$"`
	// The category of vehicles to which this constraint applies. When omitted the constraint applies to all vehicles. The constraint will be ignored when no vehicle belongs to this category.
	VehicleCategory *string `json:"vehicleCategory,omitempty" validate:"regexp=^[a-zA-Z0-9_-]{1,36}$"`
}

type _ForbiddenTaskSequence ForbiddenTaskSequence

// NewForbiddenTaskSequence instantiates a new ForbiddenTaskSequence object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewForbiddenTaskSequence(firstTaskCategory string, type_ ForbiddenTaskSequenceType, secondTaskCategory string) *ForbiddenTaskSequence {
	this := ForbiddenTaskSequence{}
	this.FirstTaskCategory = firstTaskCategory
	this.Type = type_
	this.SecondTaskCategory = secondTaskCategory
	return &this
}

// NewForbiddenTaskSequenceWithDefaults instantiates a new ForbiddenTaskSequence object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewForbiddenTaskSequenceWithDefaults() *ForbiddenTaskSequence {
	this := ForbiddenTaskSequence{}
	return &this
}

// GetFirstTaskCategory returns the FirstTaskCategory field value
func (o *ForbiddenTaskSequence) GetFirstTaskCategory() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FirstTaskCategory
}

// GetFirstTaskCategoryOk returns a tuple with the FirstTaskCategory field value
// and a boolean to check if the value has been set.
func (o *ForbiddenTaskSequence) GetFirstTaskCategoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FirstTaskCategory, true
}

// SetFirstTaskCategory sets field value
func (o *ForbiddenTaskSequence) SetFirstTaskCategory(v string) {
	o.FirstTaskCategory = v
}

// GetType returns the Type field value
func (o *ForbiddenTaskSequence) GetType() ForbiddenTaskSequenceType {
	if o == nil {
		var ret ForbiddenTaskSequenceType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ForbiddenTaskSequence) GetTypeOk() (*ForbiddenTaskSequenceType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ForbiddenTaskSequence) SetType(v ForbiddenTaskSequenceType) {
	o.Type = v
}

// GetSecondTaskCategory returns the SecondTaskCategory field value
func (o *ForbiddenTaskSequence) GetSecondTaskCategory() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SecondTaskCategory
}

// GetSecondTaskCategoryOk returns a tuple with the SecondTaskCategory field value
// and a boolean to check if the value has been set.
func (o *ForbiddenTaskSequence) GetSecondTaskCategoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SecondTaskCategory, true
}

// SetSecondTaskCategory sets field value
func (o *ForbiddenTaskSequence) SetSecondTaskCategory(v string) {
	o.SecondTaskCategory = v
}

// GetVehicleCategory returns the VehicleCategory field value if set, zero value otherwise.
func (o *ForbiddenTaskSequence) GetVehicleCategory() string {
	if o == nil || IsNil(o.VehicleCategory) {
		var ret string
		return ret
	}
	return *o.VehicleCategory
}

// GetVehicleCategoryOk returns a tuple with the VehicleCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ForbiddenTaskSequence) GetVehicleCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.VehicleCategory) {
		return nil, false
	}
	return o.VehicleCategory, true
}

// HasVehicleCategory returns a boolean if a field has been set.
func (o *ForbiddenTaskSequence) HasVehicleCategory() bool {
	if o != nil && !IsNil(o.VehicleCategory) {
		return true
	}

	return false
}

// SetVehicleCategory gets a reference to the given string and assigns it to the VehicleCategory field.
func (o *ForbiddenTaskSequence) SetVehicleCategory(v string) {
	o.VehicleCategory = &v
}

func (o ForbiddenTaskSequence) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ForbiddenTaskSequence) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["firstTaskCategory"] = o.FirstTaskCategory
	toSerialize["type"] = o.Type
	toSerialize["secondTaskCategory"] = o.SecondTaskCategory
	if !IsNil(o.VehicleCategory) {
		toSerialize["vehicleCategory"] = o.VehicleCategory
	}
	return toSerialize, nil
}

func (o *ForbiddenTaskSequence) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"firstTaskCategory",
		"type",
		"secondTaskCategory",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varForbiddenTaskSequence := _ForbiddenTaskSequence{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varForbiddenTaskSequence)

	if err != nil {
		return err
	}

	*o = ForbiddenTaskSequence(varForbiddenTaskSequence)

	return err
}

type NullableForbiddenTaskSequence struct {
	value *ForbiddenTaskSequence
	isSet bool
}

func (v NullableForbiddenTaskSequence) Get() *ForbiddenTaskSequence {
	return v.value
}

func (v *NullableForbiddenTaskSequence) Set(val *ForbiddenTaskSequence) {
	v.value = val
	v.isSet = true
}

func (v NullableForbiddenTaskSequence) IsSet() bool {
	return v.isSet
}

func (v *NullableForbiddenTaskSequence) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableForbiddenTaskSequence(val *ForbiddenTaskSequence) *NullableForbiddenTaskSequence {
	return &NullableForbiddenTaskSequence{value: val, isSet: true}
}

func (v NullableForbiddenTaskSequence) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableForbiddenTaskSequence) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


