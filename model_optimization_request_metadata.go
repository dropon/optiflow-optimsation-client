/*
Route Optimization OptiFlow

With the Route Optimization OptiFlow service you can schedule and optimize the routes of your fleet.

API version: 1.20
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OptimizationRequestMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OptimizationRequestMetadata{}

// OptimizationRequestMetadata User-defined request metadata that does not influence the optimization but is returned in the result.
type OptimizationRequestMetadata struct {
	// The name of the optimization.
	Name *string `json:"name,omitempty" validate:"regexp=^[a-zA-Z0-9_ -]{1,100}$"`
	// A list of tags of the optimization.
	Tags []string `json:"tags,omitempty"`
}

// NewOptimizationRequestMetadata instantiates a new OptimizationRequestMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOptimizationRequestMetadata() *OptimizationRequestMetadata {
	this := OptimizationRequestMetadata{}
	return &this
}

// NewOptimizationRequestMetadataWithDefaults instantiates a new OptimizationRequestMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOptimizationRequestMetadataWithDefaults() *OptimizationRequestMetadata {
	this := OptimizationRequestMetadata{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OptimizationRequestMetadata) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptimizationRequestMetadata) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OptimizationRequestMetadata) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OptimizationRequestMetadata) SetName(v string) {
	o.Name = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *OptimizationRequestMetadata) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptimizationRequestMetadata) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *OptimizationRequestMetadata) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *OptimizationRequestMetadata) SetTags(v []string) {
	o.Tags = v
}

func (o OptimizationRequestMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OptimizationRequestMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	return toSerialize, nil
}

type NullableOptimizationRequestMetadata struct {
	value *OptimizationRequestMetadata
	isSet bool
}

func (v NullableOptimizationRequestMetadata) Get() *OptimizationRequestMetadata {
	return v.value
}

func (v *NullableOptimizationRequestMetadata) Set(val *OptimizationRequestMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableOptimizationRequestMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableOptimizationRequestMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOptimizationRequestMetadata(val *OptimizationRequestMetadata) *NullableOptimizationRequestMetadata {
	return &NullableOptimizationRequestMetadata{value: val, isSet: true}
}

func (v NullableOptimizationRequestMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOptimizationRequestMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


