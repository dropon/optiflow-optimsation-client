/*
Route Optimization OptiFlow

With the Route Optimization OptiFlow service you can schedule and optimize the routes of your fleet.

API version: 1.31
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OrderDepotCombinationConstraint type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderDepotCombinationConstraint{}

// OrderDepotCombinationConstraint A constraint on the combination of orders and depots belonging to a certain category.
type OrderDepotCombinationConstraint struct {
	Type OrderDepotCombinationConstraintType `json:"type"`
	// The category of orders to which the constraint applies. The constraint will be ignored if no order belongs to this category.
	OrderCategory string `json:"orderCategory" validate:"regexp=^[a-zA-Z0-9_-]{1,36}$"`
	// The category of depots to which the constraint applies. The constraint will be ignored if no depot belongs to this category.
	DepotCategory string `json:"depotCategory" validate:"regexp=^[a-zA-Z0-9_-]{1,36}$"`
}

type _OrderDepotCombinationConstraint OrderDepotCombinationConstraint

// NewOrderDepotCombinationConstraint instantiates a new OrderDepotCombinationConstraint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderDepotCombinationConstraint(type_ OrderDepotCombinationConstraintType, orderCategory string, depotCategory string) *OrderDepotCombinationConstraint {
	this := OrderDepotCombinationConstraint{}
	this.Type = type_
	this.OrderCategory = orderCategory
	this.DepotCategory = depotCategory
	return &this
}

// NewOrderDepotCombinationConstraintWithDefaults instantiates a new OrderDepotCombinationConstraint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderDepotCombinationConstraintWithDefaults() *OrderDepotCombinationConstraint {
	this := OrderDepotCombinationConstraint{}
	return &this
}

// GetType returns the Type field value
func (o *OrderDepotCombinationConstraint) GetType() OrderDepotCombinationConstraintType {
	if o == nil {
		var ret OrderDepotCombinationConstraintType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *OrderDepotCombinationConstraint) GetTypeOk() (*OrderDepotCombinationConstraintType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *OrderDepotCombinationConstraint) SetType(v OrderDepotCombinationConstraintType) {
	o.Type = v
}

// GetOrderCategory returns the OrderCategory field value
func (o *OrderDepotCombinationConstraint) GetOrderCategory() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrderCategory
}

// GetOrderCategoryOk returns a tuple with the OrderCategory field value
// and a boolean to check if the value has been set.
func (o *OrderDepotCombinationConstraint) GetOrderCategoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrderCategory, true
}

// SetOrderCategory sets field value
func (o *OrderDepotCombinationConstraint) SetOrderCategory(v string) {
	o.OrderCategory = v
}

// GetDepotCategory returns the DepotCategory field value
func (o *OrderDepotCombinationConstraint) GetDepotCategory() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DepotCategory
}

// GetDepotCategoryOk returns a tuple with the DepotCategory field value
// and a boolean to check if the value has been set.
func (o *OrderDepotCombinationConstraint) GetDepotCategoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DepotCategory, true
}

// SetDepotCategory sets field value
func (o *OrderDepotCombinationConstraint) SetDepotCategory(v string) {
	o.DepotCategory = v
}

func (o OrderDepotCombinationConstraint) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderDepotCombinationConstraint) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["orderCategory"] = o.OrderCategory
	toSerialize["depotCategory"] = o.DepotCategory
	return toSerialize, nil
}

func (o *OrderDepotCombinationConstraint) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"orderCategory",
		"depotCategory",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOrderDepotCombinationConstraint := _OrderDepotCombinationConstraint{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOrderDepotCombinationConstraint)

	if err != nil {
		return err
	}

	*o = OrderDepotCombinationConstraint(varOrderDepotCombinationConstraint)

	return err
}

type NullableOrderDepotCombinationConstraint struct {
	value *OrderDepotCombinationConstraint
	isSet bool
}

func (v NullableOrderDepotCombinationConstraint) Get() *OrderDepotCombinationConstraint {
	return v.value
}

func (v *NullableOrderDepotCombinationConstraint) Set(val *OrderDepotCombinationConstraint) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderDepotCombinationConstraint) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderDepotCombinationConstraint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderDepotCombinationConstraint(val *OrderDepotCombinationConstraint) *NullableOrderDepotCombinationConstraint {
	return &NullableOrderDepotCombinationConstraint{value: val, isSet: true}
}

func (v NullableOrderDepotCombinationConstraint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderDepotCombinationConstraint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


